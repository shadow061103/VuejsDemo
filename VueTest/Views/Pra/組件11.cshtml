
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>組件11</title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/vue.min.js"></script>
</head>
<body>
    <div id="app" v-cloak>
         <tabs v-model="activeKey">
             <pane label="標籤1" name="1">
                 標籤1的內容
             </pane>
             <pane label="標籤2" name="2">
                 標籤2的內容
             </pane>
             <pane label="標籤3" name="3">
                 標籤3的內容
             </pane>
         </tabs>
    </div>
    

    

    <script>
        Vue.component('pane', {
            name: 'pane',
            template:'<div class="pane" v-show="show">\
        <slot></slot>\
         </div>',
            props: {
                name: {
                    type:String
                },
                label: {
                    type: String,
                    default:''
                }
            },
            data:function() {
                return {
                    show:true
                }
            },
            methods: {
                updateNav:function() {
                    this.$parent.updateNav();
                }
            },
            watch: {
                label:function() {
                    this.updateNav();
                }
            },
            mounted: function () {
                this.updateNav();
            }

        });
        Vue.component('tabs', {
            template:'<div class="tabs">\
        <div class="tabs-bar">\
            <div :class="tabCls(item) v-for="(item,index) in navList" @@click="handleChange(index)">\
            {{item.label}}\
            </div>\
        </div>\
        <div class="tabs-content">\
            <!--嵌套的pane-->\
            <slot></slot>\
        </div>\
        </div>',
            props:{
                value: {
                    type:[String,Number]
                }
            },
            data: function(){
                return {
                    currentValue: this.value,
                    navList:[]
                }
            },
            methods: {
                tabCls:function(item){
                    return ['tabs-tab', {
                        'tabs-tab-active': item.name === this.currentValue
                    }]

                },
                handleChange:function(index){
                    var nav = this.navList[index];
                    var name = nav.name;
                    this.currentValue = name;
                    this.$emit('input', name);
                    this.$emit('on-click', name);
                },
                getTabs: function () {
                    return this.$children.filter(function (item) {
                        return item.$options.name==='pane'//遍歷子組件 得到所有pane組件
                    });
                },
                updateNav: function () {
                    this.navList = [];
                    var self = this;
                    this.getTabs().forEach(function (pane, index) {
                        self.navList.push({
                            label: pane.label,
                            name: pane.name || index

                        });
                        if (!pane.name) pane.name = index;
                        if (index === 0) {
                            if (!self.currentValue) {
                                self.currentValue = pane.name || index;
                            }
                        }
                    })
                    this.updateStatus();
                },
                updateStatus: function () {
                    var tabs = this.getTabs();
                    var self = this;
                    tabs.forEach(function (tab) {
                        return tab.show = tab.name === self.currentValue;
                    })
                }

            },
            watch: {
                value: function (val) {
                    this.currentValue == val;
                },
                currentValue: function () {
                    this.updateStatus();
                }
            }
        });


        var app = new Vue({
            el: '#app',
            data:{
                activeKey: '1'
            }
        });
    </script>
</body>
</html>
