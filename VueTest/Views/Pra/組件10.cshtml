
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>組件10</title>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/vue.min.js"></script>
</head>
<body>
    <div id="app">
         <input-number v-model="value" :max="10" :min="0"></input-number>
    </div>
    <script>
        function isValueNumber(value) {
            return (/(^-?[0-9]+\.{1}\d+$)|(^-?[1-9][0-9]*$)|(^-?0{1}$)/).test(value + '');
        }
        Vue.component('input-number', {
            template: '<div class="input-number">\
                      <input type="text" :value="currentValue" @@change="handleChange">\
                      <button @@click="handleDown" :disabled="currentValue<=min">-</button>\
                      <button @@click="handleUp" :disabled="currentValue>=max">+</button>\
                     </duv>',
            props: {
                max: {
                    type: Number,
                    default: Infinity
                },
                min: {
                    type: Number,
                    default: -Infinity
                },
                value: {
                    type: Number,
                    default: 0
                }
            },
            data: function () {
                return {
                    currentValue:this.value
                }
            },
            watch: {
                currentValue: function (val) {
                    this.$emit('input', val);//更新value
                    this.$emit('on-change', val);//this當前組件實例
                },
                value: function (val) {
                    this.updateValue(val);//父組件通知component
                }
            },
            methods: {
                updateValue: function (val) {
                    if (val > this.max) val = this.max;
                    if (val < this.min) val = this.min;
                    this.currentValue = val;
                },
                handleDown: function () {
                    if (this.currentValue <= this.min) return;
                    this.currentValue -= 1;
                },
                handleUp: function () {
                    if (this.currentValue >= this.max) return;
                    this.currentValue += 1;
                },
                handleChange: function (event) {
                    var val = event.target.value.trim();
                    var max = this.max;
                    var mix = this.min;
                    if (isValueNumber(val)) {
                        val = Number(val);
                        this.currentValue = val;
                        if (val > max) {
                            this.currentValue = max;
                        }
                        else if (val < min) {
                            this.currentValue = min;
                        }

                    } else {
                        event.target.value = this.currentValue;
                    }
                }
            },
            mounted: function () {
                this.updateValue(this.value);
            }
        });
       
        var app = new Vue({
            el: '#app',
            data: {
                value: 5
            }
        });
    </script>
</body>
</html>
